{
  "name": "microservice-nodejs-template",
  "description": "This is template repo for creating a node.js microservice.",
  "version": "1.0.5",
  "author": "badboyku",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/badboyku/microservice-nodejs-template.git"
  },
  "main": "src/index.ts",
  "engines": {
    "node": ">=18",
    "npm": ">=9"
  },
  "scripts": {
    "prepare": "husky install",
    "build": "tsc && tsc-alias",
    "build:dev": "rimraf dist && npm run build",
    "dev": "TS_NODE=true node -r ts-node/register -r tsconfig-paths/register -r dotenv/config -r ./src/index.ts",
    "start": "node -r dotenv/config dist/index.js",
    "clean": "rimraf ./dist",
    "clean:modules": "rimraf ./node_modules",
    "clean:coverage": "rimraf ./test_coverage",
    "healthcheck": "curl localhost:3000/health",
    "lint": "eslint \"./src/**/*.{js,ts}\"",
    "lint:fix": "eslint \"./src/**/*.{js,ts}\" --fix",
    "lint-staged": "lint-staged",
    "test": "jest",
    "test:coverage": "jest --coverage '--watchAll=false'",
    "test:watch": "jest --watch"
  },
  "lint-staged": {
    "src/**/*.{js,ts}": [
      "eslint --fix",
      "jest --findRelatedTests --passWithNoTests"
    ]
  },
  "jest": {
    "roots": [
      "<rootDir>/src/"
    ],
    "collectCoverageFrom": [
      "src/**/*.{js,ts}",
      "!src/**/*.d.ts",
      "!src/**/*/index.ts",
      "!src/middlewares/correlator.ts",
      "!src/routes/**/*.{js,ts}",
      "!src/utils/constants.ts",
      "!src/index.ts"
    ],
    "coverageDirectory": "test_coverage",
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    },
    "moduleNameMapper": {
      "^@/(.*)": "<rootDir>/src/$1",
      "^@controllers/(.*)": "<rootDir>/src/controllers/$1",
      "^@controllers": "<rootDir>/src/controllers",
      "^@errors/(.*)": "<rootDir>/src/errors/$1",
      "^@errors": "<rootDir>/src/errors",
      "^@middlewares/(.*)": "<rootDir>/src/middlewares/$1",
      "^@middlewares": "<rootDir>/src/middlewares",
      "^@routes/(.*)": "<rootDir>/src/routes/$1",
      "^@routes": "<rootDir>/src/routes",
      "^@services/(.*)": "<rootDir>/src/services/$1",
      "^@services": "<rootDir>/src/services",
      "^@types": "<rootDir>/src/@types/global.d.ts",
      "^@utils/(.*)": "<rootDir>/src/utils/$1",
      "^@utils": "<rootDir>/src/utils"
    },
    "resetMocks": true,
    "setupFilesAfterEnv": [
      "<rootDir>/jest.setup.js"
    ],
    "testTimeout": 10000,
    "transform": {
      "^.+\\.(ts)$": "ts-jest"
    },
    "watchPlugins": [
      "jest-watch-typeahead/filename",
      "jest-watch-typeahead/testname"
    ]
  },
  "dependencies": {
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-correlation-id": "^2.0.1",
    "express-openapi-validator": "^5.1.1",
    "helmet": "^7.1.0",
    "morgan": "^1.10.0",
    "swagger-ui-express": "^5.0.0",
    "yaml": "^2.3.4"
  },
  "devDependencies": {
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/express-correlation-id": "^1.2.6",
    "@types/jest": "^29.5.10",
    "@types/morgan": "^1.9.9",
    "@types/node": "^20.9.4",
    "@types/swagger-ui-express": "^4.1.6",
    "eslint-config-badboyku": "^1.0.29",
    "eslint-import-resolver-alias": "^1.1.2",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-watch-typeahead": "^2.2.2",
    "lint-staged": "^15.1.0",
    "rimraf": "^5.0.5",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "tsc-alias": "^1.8.8",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.3.2"
  }
}
